Start:
IMPORTANT:
(1) Put router1.py in the path /home/mininet/pox/pox/misc
(2) Put mytopo1.py in the path /home/mininet

1.controller
$ cd pox
$ ./pox.py log.level --DEBUG misc.router1 misc.full_payload

2.open another window, topo
$ sudo mn --custom mytopo1.py --topo mytopo --mac --switch ovsk --controller remote

Test:
1. Test  unknown address that yield unreachable message
mininet>h1 ping -c1 10.99.0.1

2. Test known address and pingable
mininet>h1 ping -c1 h2

3. Test pingall
mininet>pingall

4. iperf
(1) mininet>iperf
(2) mininet>xterm h1 h3
in host3:
$ iperf -s
in host1:
$ iperf -c 10.0.3.100

UPDATE:

AdvancedTopology is the same as router2.py with a few modifications to the code, and working iperf command between 2 different subnets
Firewall.py is the last part of the mininet tutorial linked here: https://github.com/mininet/openflow-tutorial/wiki

procedure to test is the same as above but with different files:
1. first run controller specifying which exercise you're running ex. AdvancedTopology
cd pox
./pox.py log.level --DEBUG misc.AdvancedTopology misc.full_payload

2. open another terminal and run topology (remember to specify the pato to your topology file in the command below:
    sudo mn --custom pathtotopo/mytopologyadvanced.py --topo mytopologyadvanced--mac --switch ovsk --controller remote

3. in the mininete terminal run the pingall command first so that all tables are filled;
    mininet> pingall

4. open another terminal and check out the flows installed (the ones installed in AdvancedTopology.py should be different than the ones fr
  installed in Firewall.py)
  
    check flow tables installed with:
    - sudo ovs-ofctl dump-flows s1
    - sudo ovs-ofctl dump-flows s2
